name: Test

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ./.cargo/registry/index
          ./.cargo/registry/cache
          ./.cargo/git
          client/app/target
          client/embedded-app/target
          network-protocol/target
          server/app/target
          server/embedded-app/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/rust-toolchain.toml') }}
    - uses: actions-rs/toolchain@v1
      with:
        target: thumbv7em-none-eabihf
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Lint client app
      env:
        RUSTFLAGS: -Dwarnings
      working-directory: ./client/app
      run: cargo clippy

    - name: Format client app
      working-directory: ./client/app
      run: cargo fmt -- --check

    - name: Test client app
      working-directory: ./client/app
      run: cargo test


    - name: Lint client embedded-app
      env:
        RUSTFLAGS: -Dwarnings
      working-directory: ./client/embedded-app
      run: cargo clippy --target thumbv7em-none-eabihf

    - name: Format client embedded-app
      working-directory: ./client/embedded-app
      run: cargo fmt -- --check

      
    - name: Lint network-protocol
      env:
        RUSTFLAGS: -Dwarnings
      working-directory: ./network-protocol
      run: cargo clippy

    - name: Format network-protocol
      working-directory: ./network-protocol
      run: cargo fmt -- --check

    - name: Test network-protocol
      working-directory: ./network-protocol
      run: cargo test


    - name: Lint server app
      env:
        RUSTFLAGS: -Dwarnings
      working-directory: ./server/app
      run: cargo clippy

    - name: Format server app
      working-directory: ./server/app
      run: cargo fmt -- --check

    - name: Test server app
      working-directory: ./server/app
      run: cargo test


    - name: Lint server embedded-app
      env:
        RUSTFLAGS: -Dwarnings
      working-directory: ./server/embedded-app
      run: cargo clippy --target thumbv7em-none-eabihf

    - name: Format server embedded-app
      working-directory: ./server/embedded-app
      run: cargo fmt -- --check
